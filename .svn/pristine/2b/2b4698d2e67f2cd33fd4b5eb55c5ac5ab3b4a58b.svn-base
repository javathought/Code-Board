package models;

import java.util.Date;

import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

import play.data.validation.Required;
import play.db.jpa.Model;

@Entity
@OnDelete(action=OnDeleteAction.CASCADE)
public class Project extends Model {
	
	@Required
	public String name;
	@ManyToOne(optional=true)
	public Project parent;
	public String description;
	@Required
	public String identifier;
	public String homepage;
	public Boolean isPublic;
	@Temporal(value=TemporalType.TIMESTAMP)
	public Date created;
	public String textformat;
	@ManyToOne(optional=true)	
	public Domain domain;
	
	
	public Project(String s) {
		this.domain = Domain.find("isDefault = ?", true).first();
	}
		
	@Override 
	public String toString() {
		return name;
	}
	

	public static JPAQuery findVisibleBy(User user, Boolean ordered) {
		JPAQuery query;
		if (user != null) {
			query = Project.find("domain in (:domains ) " + 
					" or domain in (select distinct d from Domain d where isPublic = 1 )" + (ordered ? " order by created desc" : "")).bind("domains", user.domains);
		} else {
			query = Project.find("domain in (select distinct d from Domain d where isPublic = 1 )"+ (ordered ? " order by created desc" : ""));
		}
		return query;
	}
    
}
